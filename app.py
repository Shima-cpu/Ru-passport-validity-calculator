# -*- coding: utf-8 -*-
import streamlit as st
from datetime import date, timedelta
from dateutil.relativedelta import relativedelta

st.set_page_config(
    page_title="–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∑–∞–º–µ–Ω—ã –ø–∞—Å–ø–æ—Ä—Ç–∞ –†–§",
    page_icon="üõÇ",
    layout="centered",
)

# ===== –î–∏–∞–ø–∞–∑–æ–Ω—ã –≤—ã–±–æ—Ä–∞ –¥–∞—Ç =====
MIN_BIRTH = date(1900, 1, 1)
MAX_BIRTH = date.today()
MIN_ISSUE = date(1900, 1, 1)
MAX_ISSUE = date.today()

# ===== –•–µ–ª–ø–µ—Ä—ã =====
def safe_add_years(d: date, years: int) -> date:
    """–î–æ–±–∞–≤–∏—Ç—å –≥–æ–¥—ã –∫ –¥–∞—Ç–µ, –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—è 29 —Ñ–µ–≤—Ä–∞–ª—è."""
    try:
        return d.replace(year=d.year + years)
    except ValueError:
        return d.replace(month=2, day=28, year=d.year + years)

def current_passport_stage(birth: date, issue: date) -> int | None:
    """
    –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —ç—Ç–∞–ø —Ç–µ–∫—É—â–µ–≥–æ –ø–∞—Å–ø–æ—Ä—Ç–∞ –ø–æ –¥–∞—Ç–µ –≤—ã–¥–∞—á–∏:
    –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 14, 20, 45 –∏–ª–∏ None (–µ—Å–ª–∏ –≤–≤–æ–¥ —Å—Ç—Ä–∞–Ω–Ω—ã–π).
    """
    d14 = safe_add_years(birth, 14)
    d20 = safe_add_years(birth, 20)
    d45 = safe_add_years(birth, 45)

    if issue >= d45:
        return 45
    if d20 <= issue <= d45 + timedelta(days=90):
        return 20
    if d14 <= issue <= d20 + timedelta(days=90):
        return 14
    return None

def classify_passport_stage_text(stage: int | None) -> str:
    if stage == 14:
        return "–ü–µ—Ä–≤–∏—á–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤ 14 –ª–µ—Ç"
    if stage == 20:
        return "–û–±–º–µ–Ω –≤ 20 –ª–µ—Ç"
    if stage == 45:
        return "–û–±–º–µ–Ω –≤ 45 –ª–µ—Ç"
    return "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å (–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–æ–¥)"

def compute_status(birth: date, issue: date, today: date) -> dict:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
      stage_label, next_change, deadline,
      status_kind: 'invalid' | 'due' | 'ok' | 'no_more',
      days_left (–µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ).
    """
    d20 = safe_add_years(birth, 20)
    d45 = safe_add_years(birth, 45)

    stage = current_passport_stage(birth, issue)
    stage_label = classify_passport_stage_text(stage)

    if stage == 45:
        return {
            "stage_label": stage_label,
            "next_change": None,
            "deadline": None,
            "status_kind": "no_more",
            "days_left": None,
        }

    if stage == 20:
        next_change = d45
    elif stage == 14:
        next_change = d20
    else:
        # –Ω–µ —Å–º–æ–≥–ª–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å ‚Äî –ø–æ–¥—Å—Ç—Ä–∞—Ö—É–µ–º—Å—è –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É
        next_change = d20 if today < d45 else d45

    deadline = next_change + timedelta(days=90)

    if today > deadline:
        status_kind = "invalid"            # –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–æ > 90 –¥–Ω–µ–π
        days_left = None
    elif today >= next_change:
        status_kind = "due"                # –ø–æ—Ä–æ–≥ –Ω–∞—Å—Ç—É–ø–∏–ª, –Ω–æ –¥–µ–¥–ª–∞–π–Ω –µ—â—ë –Ω–µ –ø—Ä–æ—à—ë–ª
        days_left = (deadline - today).days
    else:
        status_kind = "ok"                 # –¥–æ –ø–æ—Ä–æ–≥–∞ –µ—â—ë –Ω–µ –¥–æ—à–ª–∏
        days_left = (next_change - today).days

    return {
        "stage_label": stage_label,
        "next_change": next_change,
        "deadline": deadline,
        "status_kind": status_kind,
        "days_left": days_left,
    }

def validate_inputs(birth: date, issue: date, today: date) -> list[str]:
    errs: list[str] = []

    if birth > today:
        errs.append("–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –±—É–¥—É—â–µ–º.")
    if issue > today:
        errs.append("–î–∞—Ç–∞ –≤—ã–¥–∞—á–∏ –ø–∞—Å–ø–æ—Ä—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –±—É–¥—É—â–µ–º.")
    if issue < birth:
        errs.append("–î–∞—Ç–∞ –≤—ã–¥–∞—á–∏ –ø–∞—Å–ø–æ—Ä—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–Ω—å—à–µ –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è.")

    if relativedelta(today, birth).years < 14:
        errs.append("–õ–∏—Ü—É –º–ª–∞–¥—à–µ 14 –ª–µ—Ç –ø–∞—Å–ø–æ—Ä—Ç –µ—â—ë –Ω–µ –≤—ã–¥–∞–µ—Ç—Å—è.")

    d14 = safe_add_years(birth, 14)
    if issue < d14:
        errs.append("–ü–∞—Å–ø–æ—Ä—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–¥–∞–Ω —Ä–∞–Ω–µ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è 14 –ª–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞—Ç—É –≤—ã–¥–∞—á–∏.")

    if not (MIN_BIRTH <= birth <= MAX_BIRTH):
        errs.append(
            f"–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ "
            f"{MIN_BIRTH.strftime('%d.%m.%Y')}‚Äì{MAX_BIRTH.strftime('%d.%m.%Y')}."
        )
    if not (MIN_ISSUE <= issue <= MAX_ISSUE):
        errs.append(
            f"–î–∞—Ç–∞ –≤—ã–¥–∞—á–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ "
            f"{MIN_ISSUE.strftime('%d.%m.%Y')}‚Äì{MAX_ISSUE.strftime('%d.%m.%Y')}."
        )

    return errs

# ===== UI =====
st.title("üõÇ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∑–∞–º–µ–Ω—ã –ø–∞—Å–ø–æ—Ä—Ç–∞ –†–§")
st.caption("–†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –¥–∞—Ç—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–π –∑–∞–º–µ–Ω—ã –ø–æ –ø–æ—Ä–æ–≥–∞–º 20 –∏ 45 –ª–µ—Ç –∏ 90-–¥–Ω–µ–≤–Ω–æ–º—É —Å—Ä–æ–∫—É –ø–æ—Å–ª–µ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è.")

with st.expander("–ü—Ä–∞–≤–æ–≤–∞—è –æ—Å–Ω–æ–≤–∞ (–∫—Ä–∞—Ç–∫–æ)"):
    st.markdown(
        "- –ü–∞—Å–ø–æ—Ä—Ç –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–∞ –†–§ –≤—ã–¥–∞—ë—Ç—Å—è –≤ 14 –ª–µ—Ç –∏ –ø–æ–¥–ª–µ–∂–∏—Ç –∑–∞–º–µ–Ω–µ –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ 20 –∏ 45 –ª–µ—Ç.\n"
        "- –ù–∞ –∑–∞–º–µ–Ω—É –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è 90 –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã—Ö –¥–Ω–µ–π –ø–æ—Å–ª–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è.\n"
        "‚ö†Ô∏è –£—á–∏—Ç—ã–≤–∞–π—Ç–µ, —á—Ç–æ –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞/–∏—Å–∫–ª—é—á–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∑–∞–º–µ–Ω–∞ –∑–∞ —Ä—É–±–µ–∂–æ–º) –º–æ–≥—É—Ç –º–µ–Ω—è—Ç—å—Å—è."
    )

today = date.today()
col1, col2 = st.columns(2)
with col1:
    birth = st.date_input(
        "–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è",
        value=date(1990, 1, 1),
        min_value=MIN_BIRTH,
        max_value=MAX_BIRTH,
        format="DD.MM.YYYY",   # –µ—Å–ª–∏ —Å—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è Streamlit ‚Äî —É–¥–∞–ª–∏—Ç–µ —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä
        key="birth_v4",
    )
with col2:
    issue = st.date_input(
        "–î–∞—Ç–∞ –≤—ã–¥–∞—á–∏ —Ç–µ–∫—É—â–µ–≥–æ –ø–∞—Å–ø–æ—Ä—Ç–∞",
        value=date(2010, 1, 1),
        min_value=MIN_ISSUE,
        max_value=MAX_ISSUE,
        format="DD.MM.YYYY",
        key="issue_v4",
    )

if st.button("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å"):
    errors = validate_inputs(birth, issue, today)
    for e in errors:
        st.error(e)

    if not errors:
        age_years = relativedelta(today, birth).years
        st.subheader("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã")
        st.write(f"**–í–æ–∑—Ä–∞—Å—Ç (–ø–æ–ª–Ω—ã—Ö –ª–µ—Ç):** {age_years}")

        res = compute_status(birth, issue, today)
        st.write(f"**–¢–µ–∫—É—â–∏–π –¥–æ–∫—É–º–µ–Ω—Ç –ø–æ–ª—É—á–µ–Ω –∫–∞–∫:** {res['stage_label']}")

        if res["next_change"]:
            st.write(f"**–î–∞—Ç–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–π –∑–∞–º–µ–Ω—ã:** {res['next_change'].strftime('%d.%m.%Y')}")
            st.write(f"**–ö—Ä–∞–π–Ω–∏–π —Å—Ä–æ–∫ (90 –¥–Ω–µ–π –ø–æ—Å–ª–µ –î–†):** {res['deadline'].strftime('%d.%m.%Y')}")

        # ---- –°—Ç–∞—Ç—É—Å ----
        if res["status_kind"] == "invalid":
            st.error("–ü–∞—Å–ø–æ—Ä—Ç –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω. –¢—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–º–µ–Ω–∞.")
        elif res["status_kind"] == "due":
            st.warning(f"–¢—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–º–µ–Ω–∞. –î–æ –∫—Ä–∞–π–Ω–µ–≥–æ —Å—Ä–æ–∫–∞ –æ—Å—Ç–∞–ª–æ—Å—å {res['days_left']} –¥–Ω.")
        elif res["status_kind"] == "ok":
            st.success(f"–ü–∞—Å–ø–æ—Ä—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω. –î–æ –¥–∞—Ç—ã –∑–∞–º–µ–Ω—ã –æ—Å—Ç–∞–ª–æ—Å—å {res['days_left']} –¥–Ω.")
        elif res["status_kind"] == "no_more":
            st.info("–í–æ–∑—Ä–∞—Å—Ç–Ω—ã—Ö –∑–∞–º–µ–Ω –±–æ–ª—å—à–µ –Ω–µ—Ç.")
